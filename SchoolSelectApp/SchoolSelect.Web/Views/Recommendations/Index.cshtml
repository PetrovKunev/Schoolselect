<!-- SchoolSelect.Web/Views/Recommendations/Index.cshtml -->
@model SchoolSelect.Web.ViewModels.SchoolRecommendationsViewModel
@{
    ViewData["Title"] = "Препоръчани училища";
}

<!-- Добавете този CSS в началото на файла -->
<style>
    .profile-match {
        background-color: rgba(40, 167, 69, 0.1);
        border-left: 3px solid #28a745;
        padding-left: 10px;
    }

    .match-score {
        display: inline-block;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #28a745;
        color: white;
        text-align: center;
        line-height: 40px;
        font-weight: bold;
        margin-right: 10px;
    }

    .match-indicator {
        margin-left: 5px;
        padding: 2px 5px;
        border-radius: 3px;
        font-size: 0.8em;
    }

    .match-high {
        background-color: #28a745;
        color: white;
    }

    .match-medium {
        background-color: #ffc107;
        color: black;
    }

    .match-low {
        background-color: #6c757d;
        color: white;
    }

    /* Добавени нови стилове за детайли на бал */
    .score-details {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        font-size: 0.85rem;
        margin-top: 5px;
    }

    .score-item {
        margin-right: 10px;
        padding: 2px 5px;
        border-radius: 3px;
    }

    .score-positive {
        color: #28a745;
    }

    .score-negative {
        color: #dc3545;
    }

    /* Стил за селектор на оценки */
    .grades-selector {
        background-color: rgba(0, 123, 255, 0.1);
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 20px;
    }
</style>

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>
    <h5 class="text-muted">Базирани на предпочитание: @Model.PreferenceName</h5>

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Критерии за търсене</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    @if (!string.IsNullOrEmpty(Model.UserDistrict))
                    {
                        <p><strong>Район:</strong> @Model.UserDistrict</p>
                    }
                    @if (!string.IsNullOrEmpty(Model.UserCoordinates))
                    {
                        <p><strong>Местоположение:</strong> @Model.UserCoordinates</p>
                    }
                </div>
                <div class="col-md-6">
                    @if (Model.PreferredProfiles.Any())
                    {
                        <p><strong>Предпочитани профили:</strong></p>
                        <div>
                            @foreach (var profile in Model.PreferredProfiles)
                            {
                                <span class="badge bg-info text-dark me-1">@profile</span>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Добавен селектор за избор на набор от оценки -->
            @if (Model.AvailableGradesSets != null && Model.AvailableGradesSets.Any())
            {
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="grades-selector">
                            <form asp-action="Index" method="get" class="d-flex align-items-center flex-wrap">
                                <input type="hidden" name="preferenceId" value="@Model.PreferenceId" />
                                <label for="gradesId" class="me-2 mb-0">Изберете набор от оценки:</label>
                                <select name="gradesId" id="gradesId" class="form-select me-2" style="max-width: 300px;">
                                    @foreach (var grades in Model.AvailableGradesSets)
                                    {
                                        <option value="@grades.Id" selected="@(grades.Id == Model.SelectedGradesId)">
                                            @grades.ConfigurationName (@grades.CreatedAt.ToString("dd.MM.yyyy"))
                                        </option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="bi bi-check-circle"></i> Приложи
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning mt-3">
                    <i class="bi bi-exclamation-triangle"></i> 
                    Нямате въведени оценки. <a asp-controller="UserGrades" asp-action="Create">Добавете оценки</a>, за да получите по-точни препоръки.
                </div>
            }
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <a href="@Url.Action("Index", "UserPreferences")" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Обратно към предпочитания
            </a>
        </div>
    </div>

    <div class="row">
        @foreach (var recommendation in Model.RecommendedSchools.Take(10))
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@recommendation.School.Name</h5>
                        <span class="badge bg-primary rounded-pill">@recommendation.TotalScore%</span>
                    </div>
                    <div class="card-body">
                        <p class="text-muted">@recommendation.School.District, @recommendation.School.City</p>
                        <div class="d-flex justify-content-between">
                            <p class="text-muted">@recommendation.School.District, @recommendation.School.City</p>

                            @if (recommendation.Distance.HasValue)
                            {
                                <span class="badge bg-secondary">
                                    <i class="bi bi-geo-alt"></i> @Math.Round(recommendation.Distance.Value, 1) км
                                </span>
                            }
                        </div>
                        <p>
                            <strong>Рейтинг:</strong>
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Round(recommendation.School.AverageRating))
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                            }
                            <span class="ms-1">(@recommendation.School.ReviewsCount отзива)</span>
                        </p>

                        @if (recommendation.Profiles.Any())
                        {
                            <div class="card-text">
                                <strong>Профили:</strong>
                                <ul class="profile-list list-unstyled mt-2">
                                    @foreach (var profile in recommendation.Profiles)
                                    {
                                        bool isPreferred = false;
                                        string matchClass = "";

                                        // Проверка за съвпадение на профила с предпочитаните профили
                                        foreach (var preferredProfile in Model.PreferredProfiles)
                                        {
                                            if (profile.ToLower().Contains(preferredProfile.ToLower()) ||
                                            preferredProfile.ToLower().Contains(profile.ToLower()))
                                            {
                                                isPreferred = true;
                                                matchClass = "profile-match";
                                                break;
                                            }
                                        }

                                        <li class="@matchClass mb-1 p-1">
                                            @profile
                                            @if (isPreferred)
                                            {
                                                <span class="match-indicator match-high">Съвпадение</span>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }

                        <div class="mt-3">
                            <p><strong>Оценка по критерии:</strong></p>
                            @foreach (var criterion in recommendation.CriteriaScores.OrderByDescending(c => c.Score * c.Weight))
                            {
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between">
                                        <span>
                                            @criterion.Name
                                            @if (criterion.Name == "Близост" && recommendation.Distance.HasValue)
                                            {
                                                <small class="text-muted">(@Math.Round(recommendation.Distance.Value, 1) км)</small>
                                            }
                                            @if (criterion.Name == "Съответствие с бал" && recommendation.UsedGradesId.HasValue && Model.AvailableGradesSets != null)
                                            {
                                                var gradesName = Model.AvailableGradesSets.FirstOrDefault(g => g.Id == recommendation.UsedGradesId.Value)?.ConfigurationName;
                                                if (!string.IsNullOrEmpty(gradesName))
                                                {
                                                    <small class="text-muted">(@gradesName)</small>
                                                }
                                            }
                                        </span>
                                        <span>@Math.Round(criterion.Score * 100, 0)%</span>
                                    </div>
                                    <div class="progress" style="height: 10px;">
                                        <div class="progress-bar @GetProgressBarClass(criterion.Name)"
                                             role="progressbar"
                                             style="width: @(criterion.Score * 100)%;"
                                             aria-valuenow="@(criterion.Score * 100)"
                                             aria-valuemin="0"
                                             aria-valuemax="100"></div>
                                    </div>
                                    
                                    <!-- Добавени детайли за съответствие с бал -->
                                    @if (criterion.Name == "Съответствие с бал" && recommendation.CalculatedUserScore.HasValue && recommendation.MinimumSchoolScore.HasValue)
                                    {
                                        <div class="score-details">
                                            <span class="score-item">
                                                <strong>Твоят бал:</strong> @Math.Round(recommendation.CalculatedUserScore.Value, 1)
                                            </span>
                                            <span class="score-item">
                                                <strong>Минимален бал:</strong> @Math.Round(recommendation.MinimumSchoolScore.Value, 1)
                                            </span>
                                            
                                            @if (recommendation.ScoreDifference.HasValue)
                                            {
                                                var differenceClass = recommendation.ScoreDifference.Value >= 0 ? "score-positive" : "score-negative";
                                                var differenceIcon = recommendation.ScoreDifference.Value >= 0 ? "bi-arrow-up" : "bi-arrow-down";
                                                var differenceSign = recommendation.ScoreDifference.Value >= 0 ? "+" : "";
                                                
                                                <span class="score-item @differenceClass">
                                                    <i class="bi @differenceIcon"></i>
                                                    <strong>Разлика:</strong> @(differenceSign)@Math.Round(recommendation.ScoreDifference.Value, 1)
                                                </span>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Details", "Schools", new { id = recommendation.School.Id })" class="btn btn-outline-primary">
                                <i class="bi bi-info-circle"></i> Детайли
                            </a>
                            @if (User.Identity != null && User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#addToComparisonModal" data-school-id="@recommendation.School.Id">
                                    <i class="bi bi-plus-circle"></i> Добави към сравнение
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal for adding to comparison -->
<div class="modal fade" id="addToComparisonModal" tabindex="-1" aria-labelledby="addToComparisonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addToComparisonModalLabel">Добавяне към сравнение</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- This will be populated via AJAX -->
                <p>Зареждане на налични набори за сравнение...</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle the modal for adding to comparison
            $('#addToComparisonModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var schoolId = button.data('school-id');
                var modal = $(this);

                // Load comparison sets via AJAX
                $.ajax({
                    url: '@Url.Action("GetComparisonSets", "Comparison")',
                    type: 'GET',
                    success: function(data) {
                        var modalBody = modal.find('.modal-body');
                        modalBody.html(data);
                        modalBody.find('#schoolId').val(schoolId);
                    },
                    error: function() {
                        modal.find('.modal-body').html('<p class="text-danger">Грешка при зареждане на набори за сравнение</p>');
                    }
                });
            });
        });
    </script>
}

@functions {
    string GetProgressBarClass(string criterionName)
    {
        return criterionName switch
        {
            "Близост" => "bg-info",
            "Съответствие с бал" => "bg-success",
            "Профил" => "bg-warning",
            "Рейтинг" => "bg-primary",
            _ => ""
        };
    }
}